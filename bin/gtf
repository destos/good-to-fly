#!/usr/bin/env node
// TODO, support language switching on forcast.io API

var pkg = require('../package');
var program = require('commander');
// var gtf = require('../lib');
var gtf = require('../node');

program
  .version(pkg.version)
  .usage('[options] <api-token>')
  .option('-p, --port <port>', 'Port to listen on [$PORT or 3000]', require('hostenv').PORT || 3000)
  .option('-h, --hostname <hostname>', 'Hostname to listen on [$HOSTNAME or 0.0.0.0]', require('hostenv').HOSTNAME || '0.0.0.0')
  .option('-l, --locations [<locations>]', 'One or more comma-separated addresses/zipcodes/places to poll forcast information [$LOCATIONS]', process.env.LOCATIONS)
  .option('-u, --units <units>', 'Units returned by the forcast.io api [$FORCAST_UNITS]', process.env.FORCAST_UNITS)
  .option('-i, --interval <int>', 'How frequently (ms) to poll forcast.io [$FORCAST_INTERVAL or 3600000 (1 hour)]', process.env.FORCAST_INTERVAL || 3600000)
  .option('-s, --silent', 'Do not print out warns or errors')
  .option('-c, --css <file>', 'Full URL to a custom CSS file to use on the main page')
  .parse(process.argv);

if (program.args.length != 1) {
  program.help();
} else {
  program.token = program.args[0];
}

var port = program.port;
var hostname = program.hostname;
gtf(program).listen(port, hostname, function(err){
  if (err) throw err;
  if (!program.silent) console.log('%s â€“ listening on %s:%d', new Date, hostname, port);
});
